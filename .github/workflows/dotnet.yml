name: .NET Core

on: [push]

env:
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 5.0.x
  CLASS_DIRECTORY: ./ClassAPI
  CLASS_AZURE_WEBAPP_PACKAGE_PATH: ./ClassAPI/published
  CLAN_DIRECTORY: ./ClanAPI
  CLAN_AZURE_WEBAPP_PACKAGE_PATH: ./ClanAPI/published
  FACEOFF_DIRECTORY: ./FaceOffAPI
  FACEOFF_AZURE_WEBAPP_PACKAGE_PATH: ./FaceOffAPI/published
  FE_DIRECTORY: ./AnimeBattleFrontEnd
  FE_AZURE_WEBAPP_PACKAGE_PATH: ./AnimeBattleFrontEnd/published
  
jobs:
  #build:

   # runs-on: ubuntu-latest

  #  steps:
    #- uses: actions/checkout@v1
    #- name: Setup .NET Core
    #  uses: actions/setup-dotnet@v1
     # with: 
     #   dotnet-version: '5.0.101'
    
    ## dotnet build and publish
    #- name: Build with dotnet
    #  run: dotnet build --configuration Release
    
   # - name: dotnet publish
    #  run: |
     #   dotnet publish -c Release -o dotnetcorewebapp 
    #- name: 'Run Azure webapp deploy action using publish profile credentials'
     # uses: azure/webapps-deploy@v1
     # with: 
     #   app-name: AnimeBattleGenerator 
      #  publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
     #   package: './AnimeBattleFrontEnd' 
  
  build-class-service:
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
      
      #- name: Restore
      #  run: dotnet restore "${{ env.CLASS_DIRECTORY }}"
      
      - name: Build
        run: dotnet build ${{ env.CLASS_DIRECTORY }}
        
      - name: 'Publish a Release of the App'
        run: dotnet publish "${{ env.CLASS_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env. CLASS_AZURE_WEBAPP_PACKAGE_PATH }}"
      
      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v1
        with: 
          app-name: animeclassapi 
          publish-profile: ${{ secrets.CLASS_PP}}
          package: './ClassAPI'

  build-clan-service:
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
    #  - name: Restore
     #   run: dotnet restore "${{ env.CLAN_DIRECTORY }}"
      - name: Build
        run: dotnet build ${{ env.CLAN_DIRECTORY }}
      - name: 'Publish a Release of the App'
        run: dotnet publish "${{ env.CLAN_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.CLAN_AZURE_WEBAPP_PACKAGE_PATH }}"
      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v1
        with: 
          app-name: animeclanapi 
          publish-profile: ${{ secrets.CLAN_PP}}
          package: './ClanAPI'

  build-faceoff-service:
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
      #- name: Restore
      #  run: dotnet restore "${{ env.FACEOFF_DIRECTORY }}"
      - name: Build
        run: dotnet build ${{ env.FACEOFF_DIRECTORY }}
      - name: 'Publish a Release of the App'
        run: dotnet publish "${{ env.FACEOFF_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.FACEOFF_AZURE_WEBAPP_PACKAGE_PATH }}"
      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v1
        with: 
          app-name: faceoffapi 
          publish-profile: ${{ secrets.FACEOFF_PP}}
          package: './FaceOffAPI'

  build-fe-service:
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
     # - name: Restore
      #  run: dotnet restore "${{ env.FE_DIRECTORY }}"
      - name: Build
        run: dotnet build ${{ env.FE_DIRECTORY }}
      - name: 'Publish a Release of the App'
        run: dotnet publish "${{ env.FE_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.FE_AZURE_WEBAPP_PACKAGE_PATH }}"
      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v1
        with: 
          app-name: animebattlefrontend 
          publish-profile: ${{ secrets.FRONTEND_PP}}
          package: './AnimeBattleFrontEnd'
