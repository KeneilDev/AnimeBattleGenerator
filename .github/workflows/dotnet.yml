name: Deploying All .NET Core AppServices

on: [push]

env:
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 5.0.x
  CLASS_DIRECTORY: ./AnimeBattleGenerator/ClassAPI
  CLASS_AZURE_WEBAPP_PACKAGE_PATH: ./ClassAPI/published
  CLAN_DIRECTORY: ./AnimeBattleGenerator/ClanAPI
  CLAN_AZURE_WEBAPP_PACKAGE_PATH: ./ClanAPI/published
  FACEOFF_DIRECTORY: ./AnimeBattleGenerator/FaceOffAPI
  FACEOFF_AZURE_WEBAPP_PACKAGE_PATH: ./FaceOffAPI/published
  FE_DIRECTORY: ./AnimeBattleGenerator/AnimeBattleFrontEnd
  FE_AZURE_WEBAPP_PACKAGE_PATH: ./AnimeBattleFrontEnd/published
  
jobs:
  
  #build:
  build-class-service:
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@master
      - name: Setup .NET Core
        
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
      
      - name: Restore
        run: dotnet restore "${{ env.CLASS_DIRECTORY }}"
      
      - name: Build
        run: dotnet build ${{ env.CLASS_DIRECTORY }} --configuration Release --no-restore
        
      - name: 'Publish a Release of the App'
        run: dotnet publish "${{ env.CLASS_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --output "${{ env. CLASS_AZURE_WEBAPP_PACKAGE_PATH }}"
      
      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: animeclassapi 
          publish-profile: ${{ secrets.CLASS_PP}}
          package: './ClassAPI'

  build-clan-service:
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@master
      - name: Setup .NET Core
        uses: azure/webapps-deploy@v2
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
      - name: Restore
        run: dotnet restore "${{ env.CLAN_DIRECTORY }}"
      - name: Build
        run: dotnet build ${{ env.CLAN_DIRECTORY }} --configuration Release --no-restore
      - name: 'Publish a Release of the App'
        run: dotnet publish "${{ env.CLAN_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --output "${{ env.CLAN_AZURE_WEBAPP_PACKAGE_PATH }}"
      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v1
        with: 
          app-name: animeclanapi 
          publish-profile: ${{ secrets.CLAN_PP}}
          package: './ClanAPI'

  build-faceoff-service:
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@master
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
      - name: Restore
        run: dotnet restore "${{ env.FACEOFF_DIRECTORY }}"
      - name: Build
        run: dotnet build ${{ env.FACEOFF_DIRECTORY }} --configuration Release --no-restore
      - name: 'Publish a Release of the App'
        run: dotnet publish "${{ env.FACEOFF_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --output "${{ env.FACEOFF_AZURE_WEBAPP_PACKAGE_PATH }}"
      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: faceoffapi 
          publish-profile: ${{ secrets.FACEOFF_PP}}
          package: './FaceOffAPI'

  build-fe-service:
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@master
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
      - name: Restore
        run: dotnet restore "${{ env.FE_DIRECTORY }}"
      - name: Build
        run: dotnet build ${{ env.FE_DIRECTORY }} --configuration Release --no-restore
      - name: 'Publish a Release of the App'
        run: dotnet publish "${{ env.FE_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --output "${{ env.FE_AZURE_WEBAPP_PACKAGE_PATH }}"
      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: animebattlefrontend 
          publish-profile: ${{ secrets.FRONTEND_PP}}
          package: './AnimeBattleFrontEnd'
